properties ::= [
    "type" : "csv",
    "dpostprocessor" : "JavaPostprocessor"
]

main() ::= <<
package $context.properties.package$;

$context.currentfile$

/**
 * note: $context.info.warn$
 * generator: $context.info.version$
 * generated at: $context.info.time$
 * template: $context.currenttemplate$
 */
public class $context.Slurp.classname$ {
    $context.Slurp.model:declarations(); separator="\n"$

    private static Map<String, String> PROPERTY_MAP;
    private static Map<String, String> props;

    static {
        PROPERTY_MAP = new HashMap<String, String>();

        $context.Slurp.model:staticmap(); separator="\n"$

        init();
    }

    public static void init() {
        props = new HashMap<String, String>();

        // set the defaults here
        $context.Slurp.defaults:filldefault(); separator="\n"$

        Properties sysproperties = System.getProperties();
        handleProperties(PROPERTY_MAP, sysproperties, props);
    }

    public static void handleProperties(Properties properties) {
        handleProperties(PROPERTY_MAP, properties, props);
    }
    
    protected Map<String, String> getPropertyMap() {
        return PROPERTY_MAP;
    }

    protected Map<String, String> getProps() {
        return props;
    }

    public static Map<String, String> getProperties() {
        return props;
    }

    public static void log() {
        log(LOG, PROPERTY_MAP, props);
    }
    
    public static String getIndex() {
        return props.get(INDEX);
    }

    $context.Slurp.model:getter(); separator="\n"$
}
>>

declarations(line) ::= <<
public static final String $first(line)$ = "$first(rest(line))$";
>>

staticmap(line) ::= <<
PROPERTY_MAP.put($first(line)$, "$last(line)$");
>>

getter(line) ::= <<
public String get$first(rest(line)); format="uc"$() {
    return props.get($first(line)$);
}

>>

filldefault(line) ::= <<
props.put($first(line)$, "$last(line)$");
>>
